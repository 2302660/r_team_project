"0","# Define server logic"
"0","server <- function(input, output, session) {"
"0","  # Reactive function to filter data based on selections"
"0","  filteredData <- reactive({"
"0","    req(input$year, input$organisation)"
"0","    data %>%"
"0","      filter(year %in% input$year, organisation %in% input$organisation) %>%"
"0","      mutate(id = row_number())  # Add a unique identifier for each row"
"0","  })"
"0","  "
"0","  # Generate plot output"
"0","  output$bubblePlot <- renderPlotly({"
"0","    p <- ggplot("
"0","      filteredData(),"
"0","      aes("
"0","        year,"
"0","        records_lost,"
"0","        fill = method,"
"0","        size = data_sensitivity,"
"0","        customdata = id"
"0","      )"
"0","    ) +"
"0","      geom_point(aes("
"0","        text = paste("
"0","          ""<br><b>Year:</b> "","
"0","          year,"
"0","          ""<br><b>Organisation:</b> "","
"0","          organisation,"
"0","          ""<br><b>Records Lost (in Millions):</b>"","
"0","          records_lost,"
"0","          ""<br><b>Method:</b> "","
"0","          method,"
"0","          ""<br><b>Data Sensitivity:</b> "","
"0","          data_sensitivity"
"0","        )"
"0","      ), alpha = 0.5, na.rm = TRUE) +"
"0","      scale_x_continuous(breaks = seq(min(data$year), max(data$year), by = 1)) +"
"0","      labs(title = ""Data Breach Overview"", x = ""Year"", y = ""Records Lost (in Millions)"") +"
"0","      theme_gray() +"
"0","      theme("
"0","        plot.title = element_text("
"0","          size = 20,"
"0","          face = ""bold"","
"0","          family = ""Arial"""
"0","        ),"
"0","        # Title size & font"
"0","        axis.title.x = element_text(size = 14, margin = margin(15, 0, 15, 0)),"
"0","        # X-axis title size and margin"
"0","        axis.title.y = element_text(size = 14, margin = margin(0, 15, 0, 15)),"
"0","        # Y-axis title size and margin,"
"0","        axis.text.x = element_text(size = 10),"
"0","        # X-axis text size"
"0","        axis.text.y = element_text(size = 10),"
"0","        # Y-axis text size"
"0","        legend.title = element_text(face = ""bold"", size = 12),"
"0","        # Adjust the size of the legend title"
"0","        legend.text = element_text(size = 10),"
"0","        # Adjust the size of the legend text"
"0","        legend.key.size = unit(10, ""cm""),"
"0","        # Adjust the size of the legend keys"
"0","        legend.background = element_rect(fill = ""white"", colour = ""darkblue""),"
"0","        legend.box.margin = margin(10, 10, 10, 10)  # Adjust the margin around the legend"
"0","      )"
"0","    "
"0","    "
"0","    ggplotly(p, tooltip = ""text"") %>%"
"0","      layout(hoverlabel = list(align = ""left""))"
"0","  })"
"0","  "
"0","  # Capture and display click information"
"0","  observeEvent(event_data(""plotly_click""), {"
"0","    click_data <- event_data(""plotly_click"")"
"0","    if (is.null(click_data)) {"
"0","      output$detailPanel <- renderUI(""Click on a point to see details."")"
"0","    } else {"
"0","      # Extract the custom data (unique ID) from the click event"
"0","      clicked_id <- click_data$customdata"
"0","      "
"0","      df <- filteredData()"
"0","      "
"0","      # Find the row corresponding to the clicked ID"
"0","      selected_point <- df %>% filter(id == clicked_id)"
"0","      "
"0","      if (nrow(selected_point) == 1) {"
"0","        output$detailPanel <- renderUI({"
"0","          HTML("
"0","            paste0("
"0","              ""<div style='border: 3px solid #ccc; padding: 10px; border-radius: 10px; width: 850px; font-size: 16px;'>"","
"0","              ""<b>Year:</b> &nbsp;&nbsp;"","
"0","              selected_point$year,"
"0","              ""&nbsp;&nbsp;&nbsp;&nbsp; <b>Month:</b> &nbsp;&nbsp;"","
"0","              selected_point$month,"
"0","              ""<br>"","
"0","              ""<b>Organisation:</b> &nbsp;&nbsp;"","
"0","              selected_point$organisation,"
"0","              ""<br>"","
"0","              ""<b>Sector:</b> &nbsp;&nbsp;"","
"0","              selected_point$sector,"
"0","              ""<br>"","
"0","              ""<b>Records Lost (in Millions):</b> &nbsp;&nbsp;"","
"0","              selected_point$records_lost,"
"0","              ""<br>"","
"0","              ""<b>Method:</b> &nbsp;&nbsp;"","
"0","              selected_point$method,"
"0","              ""<br>"","
"0","              ""<b>Data Sensitivity:</b> &nbsp;&nbsp;"","
"0","              selected_point$data_sensitivity,"
"0","              ""<br>"","
"0","              ""<b>Story:</b> &nbsp;&nbsp;"","
"0","              selected_point$story,"
"0","              ""<br>"","
"0","              ""<b>Source:</b> &nbsp;&nbsp; <a href='"","
"0","              selected_point$source_link,"
"0","              ""' target='_blank'>Link</a>"","
"0","              ""</div>"""
"0","            )"
"0","          )"
"0","        })"
"0","      } else {"
"0","        output$detailPanel <- renderUI(""Selected point not found in the filtered data."")"
"0","      }"
"0","    }"
"0","  })"
"0","}"
